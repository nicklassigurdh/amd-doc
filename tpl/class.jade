mixin typeDef(types)
    - types = types || []
    each type, i in types
        - var clazz = 'type'
        - if (i === 0)
            - clazz = clazz + ' first'
        - if (i === types.length)
            - clazz = clazz + ' last'
        - if (type.link)
            - var title = (type.longName === type.name) ? '' : type.longName
            a(class=clazz, href=type.link, title=title)=type.name
        - else
            span(class=clazz)=type.name
        - if (type.generic)
            span.generic &lt;
            each arg, j in type.args
                - if (j !== 0)
                    span.sep=','
                - if (arg.link)
                    a.argType(href=arg.link, title=arg.longName)=arg.name
                - else
                    span.argType=arg.name
            span.generic &gt;
        - if (i < types.length - 1)
            span.or='|'


mixin methodDef(method)
    - if (method.scope === 'static')
        span.qualifier static&nbsp;
    - if (method.isEnum)
        span.qualifier enum&nbsp;

    - if (method.chainable)
        span.qualifier this&nbsp;
    - else if (method.chainable === false)
        span.qualifier new&nbsp;

    - if (method.returns)
        span.returns
            mixin typeDef(method.returns[0].types)
            &nbsp;
    - else if (method.types)
        span.returns
            mixin typeDef(method.types)
            &nbsp;

    span.name=method.name

    span.paren.left &#40;

    - if (method.params)
        span.params
            each param, i in method.params
                - var clazz = (param.optional) ? 'param optional' : 'param'
                - if (i === 0)
                    - clazz = clazz + ' first'
                - if (i === method.params.length)
                    - clazz = clazz + ' last'
                span(class=clazz)
                    - if (param.optional)
                        span.opt.left [
                    - if (i !== 0)
                        span.sep=','
                    mixin typeDef(param.types)
                    &nbsp;
                    span.name=param.name
                    - if (param.variable)
                        span.varargs=', ...'
                    - if (param.optional)
                        span.opt.right ]

    span.paren.right &#41;


mixin eventDef(event)
    span.qualifier event&nbsp;
    span.name.string='"' + event.name + '"'
    span.colon=':'
    - if (event.types)
        span.returns
            mixin typeDef(event.types)
            &nbsp;


- if (cl.module && cl.module.description)
    div.overview.section
        h3.section-header(rel=module + '#SOverview') Overview
        div.subsection
            div.meta
                a(class='permalink', href='#/' + module + '#SOverview', alt='Permalink to ' + module + ' overview', title='Permalink to ' + module + ' overview')
                    i.icomoon-hash
            div.description!=cl.module.description

- if (cl.module && cl.module.meta && ((cl.module.meta.dependencies && cl.module.meta.dependencies.length) || (cl.module.meta.whatrequires && cl.module.meta.whatrequires.length)))
    div.dependencies.section
        h3.section-header(rel=module + '#SDependencies') Dependencies
        div.subsection
            div.meta
                a(class='permalink', href='#/' + module + '#SDependencies', alt='Permalink to ' + module + ' dependencies', title='Permalink to ' + module + ' dependencies ')
                    i.icomoon-hash
            - if (cl.module.meta.dependencies && cl.module.meta.dependencies.length)
                div.requires
                    h3 Requires
                    ul
                        each dep in cl.module.meta.dependencies
                            - if (dep.link)
                                li
                                    a(href=dep.link)=dep.id
                            - else
                                li=dep.id
            - if (cl.module.meta.whatrequires && cl.module.meta.whatrequires.length)
                div.requiredby
                    h3 Required by
                    ul
                        each dep in cl.module.meta.whatrequires
                            - if (dep.link)
                                li
                                    a(href=dep.link)=dep.id
                            - else
                                li=dep.id

- if (cl.constructor && cl.constructor.kind === 'class')
    div.constructors.section
        h3.section-header(rel=module + '#SConstructor') Constructor
        div.constructor.subsection
            h2.subsection-header
                mixin methodDef(cl.constructor)
            div.meta
                a(class='permalink', href='#/' + module + '#SConstructor', alt='Permalink to ' + cl.constructor.longName, title='Permalink to ' + cl.constructor.longName)
                    i.icomoon-hash
                a(class='srclink', alt='View Source', title='View Source', href=cl.constructor.meta.srcview)
                    i.icomoon-code
            - if (cl.constructor.description)
                div.description!=cl.constructor.description

- if (cl.properties && Object.keys(cl.properties).length)
    div.properties.section
        h3.section-header(rel=module + '#SProperties') Properties
        each key in Object.keys(cl.properties).sort()
            - var prop = cl.properties[key]
            - var clazz = (prop.inherited || prop.overridden) ? 'inherited property subsection' : 'property subsection'
            div(class=clazz, rel=prop.longname)
                h2.subsection-header
                    mixin methodDef(prop)
                div.meta
                    a(class='permalink', href='#/' + prop.longname, alt='Permalink to ' + prop.longname, title='Permalink to ' + prop.longname)
                        i.icomoon-hash
                    a(class='srclink', alt='View Source', title='View Source', href=prop.meta.srcview)
                        i.icomoon-code
                - if (prop.isEnum)
                    - var isString = (prop.types && prop.types[0].name === 'String')
                    - var isNumber = (prop.types && prop.types[0].name === 'Number')
                    div.enum-fields
                        span.brace='{'
                        each subprop in prop.properties
                            h5.enum-field
                                span.name=subprop.name
                                span.equals=' = '
                                - var propClass = isString ? 'defaultValue string' : isNumber ? 'defaultValue number' : 'defaultValue'
                                span(class=propClass)
                                    - if (!!isString)
                                        span='"'
                                    span.value=subprop.defaultvalue
                                    - if (!!isString)
                                        span='"'
                        span.brace='}'
                - if (prop.inherited)
                    div.inherit-info
                        div.inner
                            span inherited from&nbsp;
                            a(title=prop.inherited.longName, href=prop.inherited.link)=prop.inherited.name
                - if (prop.overridden)
                    div.override-info
                        div.inner
                            span overridden from&nbsp;
                            a(title=prop.overridden.longName, href=prop.overridden.link)=prop.overridden.name
                - if (prop.description)
                    div.description!=prop.description

- if (cl.methods && Object.keys(cl.methods).length)
    div.methods.section
        h3.section-header(rel=module + '#SMethods') Methods
        each key in Object.keys(cl.methods).sort()
            - var method = cl.methods[key]
            - var clazz = (method.inherited || method.overridden) ? 'inherited method subsection' : 'method subsection'
            div(class=clazz, rel=method.longname)
                h2.subsection-header
                    mixin methodDef(method)
                div.meta
                    a(class='permalink', href='#/' + method.longname, alt='Permalink to ' + method.longname, title='Permalink to ' + method.longname)
                        i.icomoon-hash
                    a(class='srclink', alt='View Source', title='View Source', href=method.meta.srcview)
                        i.icomoon-code
                - if (method.inherited)
                    div.inherit-info
                        div.inner
                            span inherited from&nbsp;
                            a(title=method.inherited.longName, href=method.inherited.link)=method.inherited.name
                - else if (method.imported)
                    div.import-info
                        div.inner
                            span imported from&nbsp;
                            a(title=method.imported.module, href=method.imported.srcview)=method.imported.module
                - if (method.overridden)
                    div.override-info
                        div.inner
                            span overridden from&nbsp;
                            a(title=method.overridden.longName, href=method.overridden.link)=method.overridden.name
                - if (method.description)
                    div.description!=method.description

- if (cl.events && Object.keys(cl.events).length)
    div.events.section
        h3.section-header(rel=module + '#SEvents') Events
        each key in Object.keys(cl.events).sort()
            - var ev = cl.events[key]
            - var clazz = (ev.inherited || ev.overridden) ? 'inherited event subsection' : 'event subsection'
            div(class=clazz, rel=ev.longname)
                h2.subsection-header
                    mixin eventDef(ev)
                div.meta
                    a(class='permalink', href='#/' + ev.longname, alt='Permalink to ' + ev.longname, title='Permalink to ' + ev.longname)
                        i.icomoon-hash
                    a(class='srclink', alt='View Source', title='View Source', href=ev.meta.srcview)
                        i.icomoon-code
                - if (ev.inherited)
                    div.inherit-info
                        div.inner
                            span inherited from&nbsp;
                            a(title=ev.inherited.longName, href=ev.inherited.link)=ev.inherited.name
                - if (ev.overridden)
                    div.override-info
                        div.inner
                            span overridden from&nbsp;
                            a(title=ev.overridden.longName, href=ev.overridden.link)=ev.overridden.name
                - if (ev.description)
                    div.description!=ev.description
